name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Get version from tag
      id: version
      run: |
        $tag = "${{ github.ref }}" -replace 'refs/tags/v', ''
        echo "VERSION=$tag" >> $env:GITHUB_OUTPUT
        echo "Version: $tag"
      
    - name: Restore dependencies
      run: dotnet restore Verdure.Assistant.sln
      
    - name: Build solution
      run: dotnet build Verdure.Assistant.sln --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test Verdure.Assistant.sln --no-build --configuration Release --verbosity normal
      
    - name: Create NuGet packages
      run: |
        dotnet pack src/Verdure.Assistant.Core/Verdure.Assistant.Core.csproj --no-build --configuration Release --output ./packages /p:PackageVersion=${{ steps.version.outputs.VERSION }}
      
    - name: Publish Console App
      run: |
        dotnet publish src/Verdure.Assistant.Console/Verdure.Assistant.Console.csproj -c Release -o publish/console-win-x64 --self-contained true -r win-x64 /p:PublishSingleFile=true
        dotnet publish src/Verdure.Assistant.Console/Verdure.Assistant.Console.csproj -c Release -o publish/console-linux-x64 --self-contained true -r linux-x64 /p:PublishSingleFile=true
        dotnet publish src/Verdure.Assistant.Console/Verdure.Assistant.Console.csproj -c Release -o publish/console-osx-x64 --self-contained true -r osx-x64 /p:PublishSingleFile=true
        
    - name: Publish WinUI App
      run: |
        dotnet publish src/Verdure.Assistant.WinUI/Verdure.Assistant.WinUI.csproj -c Release -o publish/winui --self-contained true -r win-x64
        
    - name: Create release archives
      run: |
        Compress-Archive -Path "publish/console-win-x64/*" -DestinationPath "verdure-assistant-console-win-x64-v${{ steps.version.outputs.VERSION }}.zip"
        Compress-Archive -Path "publish/console-linux-x64/*" -DestinationPath "verdure-assistant-console-linux-x64-v${{ steps.version.outputs.VERSION }}.zip"
        Compress-Archive -Path "publish/console-osx-x64/*" -DestinationPath "verdure-assistant-console-osx-x64-v${{ steps.version.outputs.VERSION }}.zip"
        Compress-Archive -Path "publish/winui/*" -DestinationPath "verdure-assistant-winui-win-x64-v${{ steps.version.outputs.VERSION }}.zip"
        
    - name: Generate changelog
      id: changelog
      run: |
        $changelog = @"
        ## What's Changed
        
        This release includes bug fixes, performance improvements, and new features.
        
        ### Downloads
        - **Console Application**: Available for Windows, Linux, and macOS
        - **WinUI Application**: Available for Windows
        - **NuGet Package**: Verdure.Assistant.Core v${{ steps.version.outputs.VERSION }}
        
        ### Installation
        1. Download the appropriate archive for your platform
        2. Extract the files
        3. Run the executable
        
        For developers, install the NuGet package:
        ```
        dotnet add package Verdure.Assistant.Core --version ${{ steps.version.outputs.VERSION }}
        ```
        "@
        
        $changelog | Out-File -FilePath changelog.md -Encoding UTF8
        echo "CHANGELOG_FILE=changelog.md" >> $env:GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Verdure Assistant v${{ steps.version.outputs.VERSION }}
        body_path: ${{ steps.changelog.outputs.CHANGELOG_FILE }}
        files: |
          verdure-assistant-console-win-x64-v${{ steps.version.outputs.VERSION }}.zip
          verdure-assistant-console-linux-x64-v${{ steps.version.outputs.VERSION }}.zip
          verdure-assistant-console-osx-x64-v${{ steps.version.outputs.VERSION }}.zip
          verdure-assistant-winui-win-x64-v${{ steps.version.outputs.VERSION }}.zip
          packages/*.nupkg
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Publish to NuGet
      if: "!contains(steps.version.outputs.VERSION, '-')"
      run: |
        dotnet nuget push packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
